/* ───────────────────────────────────────────────────────────────────
   Image Canvas Styles
──────────────────────────────────────────────────────────────────── */
.image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    width: 100%;
    margin-top: 1rem;
}

.image-card {
    background-color: var(--color-card-bg);
    border-radius: 0.75rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.image-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-secondary);
    margin-bottom: 0.75rem;
}

.image-wrapper {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    /* center the image horizontally */
    align-items: center;
    /* center vertically if you set a height */
    background-color: #f7f7f7;
    border-radius: 0.5rem;
    overflow: hidden;
}

.image-img {
    max-width: 100%;
    height: auto;
    display: block;
    border-radius: 0.5rem;
}

/* Canvas overlay must fill the same area as the <img> */
.overlay-canvas {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    /* 
      To make the canvas match the displayed image dimensions,
      you’ll need to synchronize its width/height in JS when you draw.
      But for CSS centering, the above rules are sufficient.
    */
    /* If you want it to cover the full width of its parent wrapper: */
    width: 100%;
    height: 100%;
    pointer-events: none;
}

/* Center the spinner absolutely over the wrapper */
.image-wrapper>.spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 20;
}

/* The “Run Detection” button below the image */
.detect-button {
    margin-top: 1rem;
    background-color: var(--color-primary);
    color: var(--color-text-light);
    font-weight: 600;
    font-size: 0.95rem;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
}

.detect-button:hover {
    background-color: #247a75;
    /* slightly darker teal */
}

.detect-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

/* Smaller screens: stack cards in one column */
@media (max-width: 768px) {
    .image-grid {
        grid-template-columns: 1fr;
    }
}